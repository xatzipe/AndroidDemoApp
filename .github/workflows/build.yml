name: Build and Test

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  #  unit-tests:
  #    runs-on: ubuntu-latest
  #    permissions:
  #      contents: read
  #    steps:
  #      - name: Checkout project source code
  #        uses: actions/checkout@v3
  #      - name: set up JDK 17
  #        uses: actions/setup-java@v3
  #        with:
  #          java-version: 17
  #          distribution: "temurin"
  #      - name: Cache Gradle and wrapper
  #        uses: actions/cache@v3
  #        with:
  #          path: |
  #            ~/.gradle/caches
  #            ~/.gradle/wrapper
  #          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
  #      - name: Validate Gradle Wrapper
  #        uses: gradle/wrapper-validation-action@v1
  #      - name: Build with Gradle Wrapper
  #        uses: gradle/gradle-build-action@v2
  #        with:
  #          arguments: test --full-stacktrace

  #  android-tests:
  #    runs-on: macos-latest
  #    timeout-minutes: 30
  #    needs: [ unit-tests ]
  #    strategy:
  #      matrix:
  #        include:
  #          - api-level: 28
  #            target: default
  #            arch: x86
  #          - api-level: 33
  #            target: google_apis # emulator API 33 only exists with Google APIs
  #            arch: x86_64
  #
  #    permissions:
  #      contents: read
  #    steps:
  #      - name: Checkout the code
  #        uses: actions/checkout@v3
  #      - name: set up JDK 17
  #        uses: actions/setup-java@v3
  #        with:
  #          java-version: 17
  #          distribution: "temurin"
  #      - name: Validate Gradle Wrapper
  #        uses: gradle/wrapper-validation-action@v1
  #      - name: Run android tests
  #        uses: reactivecircus/android-emulator-runner@v2
  #        with:
  #          api-level: ${{ matrix.api-level }}
  #          target: ${{ matrix.target }}
  #          arch: ${{ matrix.arch }}
  #          script: ./gradlew $GRADLE_OPTS connectedCheck --stacktrace

  appcenter-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project source code
        uses: actions/checkout@v3

      - name: Set up ruby env
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.2
          bundler-cache: true

#      - name: Run tests
#        run: bundle exec fastlane android app_test

      - name: Decode Keystore File
        uses: timheuer/base64-to-file@v1
        id: android_keystore
        with:
          fileName: "android_keystore.keystore"
          encodedString: ${{ secrets.KEYSTORE_FILE }}

      - name: Define version code with offset
        env:
          RUN_NUMBER: ${{ github.run_number }}
          INITIAL_VERSION_CODE: 73
        run: |
          VERSION_CODE=$((INITIAL_VERSION_CODE + RUN_NUMBER))
          echo "version_code=$VERSION_CODE" >> $GITHUB_ENV

      - name: Update version code
        uses: chkfung/android-version-actions@v1.1
        with:
          gradlePath: app/build.gradle
          versionCode: ${{ env.version_code }}

      - name: Build & deploy Android release
        run: bundle exec fastlane android deployAppCenter
        env:
          KEYSTORE_FILE: ${{ steps.android_keystore.outputs.filePath }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS}}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          APPCENTER_API_TOKEN: ${{ secrets.APPCENTER_API_TOKEN }}
          APPCENTER_OWNER_NAME: ${{ secrets.APPCENTER_OWNER_NAME }}
          APPCENTER_APP_NAME: ${{ secrets.APPCENTER_APP_NAME }}

#  build-and-test:
#    #    runs-on: ubuntu-latest
#    runs-on: macos-latest
#
#    #    needs: unit-tests
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v3
#
#      - name: Setup JAVA 11
#        uses: actions/setup-java@v3
#        with:
#          java-version: 11
#          distribution: 'temurin'
#
#      - name: Cache SonarCloud packages
#        uses: actions/cache@v3
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar
#
#      - name: Cache Gradle and wrapper
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
#
##      - name: Grant execute permission for gradlew
##        run: chmod +x gradlew
#
#      - name: Validate Gradle Wrapper
#        uses: gradle/wrapper-validation-action@v1
#
#      - name: Build with Gradle Wrapper & run sonar
#        uses: gradle/gradle-build-action@v2
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        with:
#          arguments: build sonar --full-stacktrace

#      - name: Run tests
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: ./gradlew test sonar

#      - name: Run Instrumentation Tests
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: 29
#          script: ./gradlew connectedAndroidTest